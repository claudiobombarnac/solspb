// Decompiled by Jad v1.5.8e2. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://kpdus.tripod.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Transformation.java

package com.dukascopy.calculator.graph;

import java.io.PrintStream;

// Referenced classes of package com.dukascopy.calculator.graph:
//            View

public class Transformation
{

    public Transformation(View view)
    {
        this.view = view;
        setScale(10D);
        setOrigin(0.0D, 0.0D);
        setXMajorUnit(5D);
        setXMinorUnit(1.0D);
        setYMajorUnit(5D);
        setYMinorUnit(1.0D);
    }

    public void setScale(double scale)
    {
        if(scale <= 0.0D)
        {
            System.err.println("Ignoring attempt to set invalid scale in Transformation.");
            return;
        } else
        {
            xScale = yScale = scale;
            return;
        }
    }

    public void setScaleY(double scale)
    {
        if(scale <= 0.0D)
        {
            System.err.println("Ignoring attempt to set invalid scale in Transformation.");
            return;
        } else
        {
            yScale = scale;
            return;
        }
    }

    public void setScaleX(double scale)
    {
        if(scale <= 0.0D)
        {
            System.err.println("Ignoring attempt to set invalid scale in Transformation.");
            return;
        } else
        {
            xScale = scale;
            return;
        }
    }

    public void setOrigin(double x, double y)
    {
        xOrigin = x;
        yOrigin = y;
    }

    public void setOriginX(double x)
    {
        xOrigin = x;
    }

    public void setOriginY(double y)
    {
        yOrigin = y;
    }

    double getOriginX()
    {
        return xOrigin;
    }

    double getOriginY()
    {
        return yOrigin;
    }

    public double toModelX(double x)
    {
        return xOrigin + (x - (double)view.getWidth() / 2D) / xScale;
    }

    public double toModelY(double y)
    {
        return yOrigin + ((double)view.getHeight() / 2D - y) / yScale;
    }

    public double toViewX(double x)
    {
        return (x - xOrigin) * xScale + (double)view.getWidth() / 2D;
    }

    public double toViewY(double y)
    {
        return (double)view.getHeight() / 2D + (yOrigin - y) * yScale;
    }

    double getXMajorUnit()
    {
        return xMajorUnit;
    }

    void setXMajorUnit(double unit)
    {
        xMajorUnit = unit;
    }

    double getXMinorUnit()
    {
        return xMinorUnit;
    }

    void setXMinorUnit(double unit)
    {
        xMinorUnit = unit;
    }

    double getYMajorUnit()
    {
        return yMajorUnit;
    }

    void setYMajorUnit(double unit)
    {
        yMajorUnit = unit;
    }

    double getYMinorUnit()
    {
        return yMinorUnit;
    }

    void setYMinorUnit(double unit)
    {
        yMinorUnit = unit;
    }

    protected View view;
    protected double xScale;
    protected double yScale;
    protected double xOrigin;
    protected double yOrigin;
    protected double xMajorUnit;
    protected double xMinorUnit;
    protected double yMajorUnit;
    protected double yMinorUnit;
}
