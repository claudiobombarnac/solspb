// Decompiled by Jad v1.5.8e2. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://kpdus.tripod.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   IDataProvider.java

package com.dukascopy.charts.math.dataprovider;

import com.dukascopy.api.*;
import com.dukascopy.api.impl.IndicatorWrapper;
import java.lang.reflect.InvocationTargetException;

// Referenced classes of package com.dukascopy.charts.math.dataprovider:
//            IDataSequence, DataChangeListener

public interface IDataProvider
{

    public abstract void start();

    public abstract long getLatestDataTime();

    public abstract long getLatestDataTime(int i);

    public abstract Object getLatestValue(int i, int j);

    public abstract void setFilter(Filter filter);

    public abstract void setDailyFilterPeriod(Period period);

    public abstract void setPeriod(Period period);

    public abstract void setOfferSide(OfferSide offerside);

    public abstract void setInstrument(Instrument instrument);

    public abstract Filter getFilter();

    public abstract Period getDailyFilterPeriod();

    public abstract Period getPeriod();

    public abstract OfferSide getOfferSide();

    public abstract Instrument getInstrument();

    public abstract IDataSequence getDataSequence(int i, long l, int j);

    public abstract void addDataChangeListener(DataChangeListener datachangelistener);

    public abstract void removeDataChangeListener(DataChangeListener datachangelistener);

    public abstract boolean containsIndicator(int i);

    public abstract void addIndicator(IndicatorWrapper indicatorwrapper)
        throws IllegalArgumentException, IllegalAccessException, InvocationTargetException;

    public abstract void editIndicator(int i)
        throws IllegalArgumentException, IllegalAccessException, InvocationTargetException;

    public abstract void removeIndicator(int i);

    public abstract void removeIndicators(int ai[]);

    public abstract void removeAllIndicators();

    public abstract int[] getIndicatorIds();

    public abstract void setActive(boolean flag);

    public abstract boolean isActive();

    public abstract void dispose();
}
