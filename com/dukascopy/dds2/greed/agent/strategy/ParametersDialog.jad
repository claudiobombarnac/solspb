// Decompiled by Jad v1.5.8e2. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://kpdus.tripod.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ParametersDialog.java

package com.dukascopy.dds2.greed.agent.strategy;

import com.dukascopy.api.IStrategy;
import com.dukascopy.api.impl.execution.IControlUI;
import com.dukascopy.api.impl.execution.Task;
import com.dukascopy.api.impl.execution.TaskParameter;
import com.dukascopy.dds2.greed.gui.l10n.LocalizationManager;
import java.awt.Dimension;
import java.awt.Frame;
import java.io.File;
import java.util.LinkedList;
import java.util.Map;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;

// Referenced classes of package com.dukascopy.dds2.greed.agent.strategy:
//            ParametersPanel

public class ParametersDialog extends JDialog
    implements IControlUI
{

    public ParametersDialog(JFrame parent, java.util.List params, boolean isEditDialog)
    {
        super(parent, LocalizationManager.getText("strategy.parameters.dialog.title"), true);
        parametersPanel = null;
        this.parent = parent;
        parametersPanel = new ParametersPanel(this, params, isEditDialog);
        initDialog();
    }

    public ParametersDialog(Frame parent, IStrategy target, boolean isEditDialog, File binaryFile)
    {
        super(parent, LocalizationManager.getText("strategy.parameters.dialog.title"), true);
        parametersPanel = null;
        this.parent = parent;
        parametersPanel = new ParametersPanel(this, target, isEditDialog, binaryFile);
        initDialog();
    }

    public java.util.List getValues()
    {
        return parametersPanel.getValues();
    }

    public Task showParam(Map parameters)
    {
        Task returnCode = null;
        parametersPanel.setParameters(parameters);
        if(parametersPanel.isAnyParameterDetected())
        {
            setVisible(true);
            returnCode = parametersPanel.getReturnCode();
        } else
        {
            returnCode = new TaskParameter();
        }
        return returnCode;
    }

    public java.util.List showModal()
    {
        if(parametersPanel.isAnyParameterDetected())
        {
            setVisible(true);
            if(parametersPanel.getReturnCode() != null)
                return parametersPanel.getParameters();
            else
                return null;
        } else
        {
            return new LinkedList();
        }
    }

    public void setControlField(JComponent component, boolean justCheckDoNotSetFields)
        throws Exception
    {
        parametersPanel.setControlField(component, justCheckDoNotSetFields);
    }

    public java.util.List getParameters()
    {
        return parametersPanel.getParameters();
    }

    private void initDialog()
    {
        setSize();
        setModal(true);
        setResizable(true);
        setContentPane(parametersPanel);
        setLocationRelativeTo(parent);
    }

    private void setSize()
    {
        setMinimumSize(DIALOG_SIZE);
        Dimension customSize = ParametersPanel.getDimension();
        if(customSize != null)
            setSize(customSize);
    }

    public static final String DIMENSION_PROPERTY_KEY = "com.dukascopy.ParametersDialog.size";
    private static final Dimension DIALOG_SIZE = new Dimension(450, 450);
    private ParametersPanel parametersPanel;
    private final Frame parent;

}
