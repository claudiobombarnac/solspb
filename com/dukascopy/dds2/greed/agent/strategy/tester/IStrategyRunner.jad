// Decompiled by Jad v1.5.8e2. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://kpdus.tripod.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   IStrategyRunner.java

package com.dukascopy.dds2.greed.agent.strategy.tester;

import com.dukascopy.api.Instrument;
import com.dukascopy.api.OfferSide;
import com.dukascopy.api.impl.execution.ScienceWaitForUpdate;
import com.dukascopy.api.system.ITesterClient;
import com.dukascopy.charts.data.datacache.IFeedDataProvider;
import com.dukascopy.charts.data.datacache.JForexPeriod;
import com.dukascopy.dds2.greed.agent.strategy.tester.dataload.IDataLoadingThread;
import java.util.Set;
import java.util.concurrent.TimeUnit;

// Referenced classes of package com.dukascopy.dds2.greed.agent.strategy.tester:
//            ITesterReport

public interface IStrategyRunner
{

    public abstract void runUntilChange(ScienceWaitForUpdate sciencewaitforupdate, long l, TimeUnit timeunit)
        throws InterruptedException;

    public abstract Set getInstruments();

    public abstract long perfStartTime();

    public abstract void perfStopTime(long l, ITesterReport.PerfStats perfstats);

    public abstract boolean isStrategyThread();

    public abstract boolean wasCanceled();

    public abstract com.dukascopy.api.system.ITesterClient.DataLoadingMethod getDataLoadingMethod();

    public abstract long getFrom();

    public abstract long getTo();

    public abstract IFeedDataProvider getFeedDataProvider();

    public abstract void addDataLoadingThread(IDataLoadingThread idataloadingthread);

    public abstract void removeDataLoadingThread(IDataLoadingThread idataloadingthread);

    public abstract boolean containsDataLoadingThread(Instrument instrument, JForexPeriod jforexperiod, OfferSide offerside);

    public abstract long getLastTickTime();
}
