// Decompiled by Jad v1.5.8e2. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://kpdus.tripod.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   JLocalizableButton.java

package com.dukascopy.dds2.greed.gui.l10n.components;

import com.dukascopy.dds2.greed.gui.l10n.Localizable;
import com.dukascopy.dds2.greed.gui.l10n.LocalizationManager;
import com.dukascopy.dds2.greed.gui.resizing.ResizingManager;
import com.dukascopy.dds2.greed.gui.resizing.components.JResizableButton;
import com.dukascopy.dds2.greed.gui.resizing.components.ResizableIcon;
import com.dukascopy.dds2.greed.util.LookAndFeelSpecific;
import java.awt.Font;
import javax.swing.Icon;

public class JLocalizableButton extends JResizableButton
    implements Localizable, LookAndFeelSpecific
{

    public JLocalizableButton()
    {
        LocalizationManager.addLocalizable(this);
    }

    public JLocalizableButton(Icon icon)
    {
        super(icon);
        LocalizationManager.addLocalizable(this);
    }

    public JLocalizableButton(String textKey)
    {
        this.textKey = textKey;
        LocalizationManager.addLocalizable(this);
    }

    public JLocalizableButton(String textKey, com.dukascopy.dds2.greed.gui.resizing.ResizingManager.ComponentSize size)
    {
        super(size);
        this.textKey = textKey;
        LocalizationManager.addLocalizable(this);
    }

    public JLocalizableButton(com.dukascopy.dds2.greed.gui.resizing.ResizingManager.ComponentSize defaultSize)
    {
        super(defaultSize);
        LocalizationManager.addLocalizable(this);
    }

    public JLocalizableButton(String textKey, String toolTipKey)
    {
        this.textKey = textKey;
        this.toolTipKey = toolTipKey;
        LocalizationManager.addLocalizable(this);
    }

    public JLocalizableButton(ResizableIcon icon, com.dukascopy.dds2.greed.gui.resizing.ResizingManager.ComponentSize size)
    {
        super(icon, size);
        LocalizationManager.addLocalizable(this);
    }

    public void localize()
    {
        setFont(LocalizationManager.getDefaultFont(getFont().getSize()));
        setText(textKey);
        if(toolTipKey != null)
            setToolTipText(toolTipKey);
    }

    public void setText(String key)
    {
        textKey = key;
        super.setText(LocalizationManager.getText(textKey));
    }

    public void setToolTipText(String key)
    {
        toolTipKey = key;
        if(toolTipKey != null && !"".equals(toolTipKey.trim()))
            super.setToolTipText(LocalizationManager.getText(toolTipKey));
    }

    public String getTextKey()
    {
        return textKey;
    }

    public void setTextKey(String textKey)
    {
        this.textKey = textKey;
        localize();
    }

    public String getToolTipKey()
    {
        return toolTipKey;
    }

    public void setToolTipKey(String toolTipKey)
    {
        this.toolTipKey = toolTipKey;
        localize();
    }

    private String textKey;
    private String toolTipKey;
}
